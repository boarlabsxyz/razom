name: Preview Deployment

on:
  workflow_run:
    workflows: ['Test Stage']
    types:
      - completed
    branches:
      - ${{ github.head_ref }}
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Are you sure you want to deploy preview?'
        required: true
        type: boolean
        default: false

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  VERCEL_CLI_TOKEN: ${{ secrets.VERCEL_CLI_TOKEN }}
  SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
  NODE_ENV: preview

jobs:
  check-test-status:
    runs-on: ubuntu-latest
    outputs:
      test_status: ${{ steps.check_status.outputs.status }}
    steps:
      - name: Check Test Stage Status
        id: check_status
        run: |
          response=$(curl -sL \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/testStage.yaml/runs?branch=${{ github.head_ref }}&per_page=1")

          status=$(echo "$response" | jq -r '.workflow_runs[0].conclusion')
          echo "status=$status" >> $GITHUB_OUTPUT

          if [ "$status" != "success" ]; then
            echo "::error::Test Stage has not passed on this branch. Please run tests first."
            exit 1
          fi

  deployment:
    needs: check-test-status
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: |
      (github.event_name == 'workflow_dispatch' && inputs.confirm == true) ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    environment:
      name: preview
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate required secrets
        run: |
          if [ -z "$VERCEL_ORG_ID" ] || [ -z "$VERCEL_PROJECT_ID" ] || [ -z "$VERCEL_CLI_TOKEN" ]; then
            echo "::error::Missing required Vercel secrets"
            exit 1
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.18.2'
          cache: 'npm'
          cache-dependency-path: './veterans/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: ./veterans

      - name: Build project
        run: npx vercel build --yes --token="$VERCEL_CLI_TOKEN"
        working-directory: ./veterans

      - name: Deploy to Vercel
        id: deploy
        run: |
          DEPLOYMENT_URL=$(npx vercel deploy --prebuilt --token="$VERCEL_CLI_TOKEN")
          echo "url=$DEPLOYMENT_URL" >> "$GITHUB_OUTPUT"
          echo "DEPLOYMENT_URL=${DEPLOYMENT_URL}" >> "$GITHUB_ENV"
          echo "Preview URL: $DEPLOYMENT_URL"
        working-directory: ./veterans

      - name: Check if DEPLOYMENT_URL is set
        run: |
          if [ -z "${{ env.DEPLOYMENT_URL }}" ]; then
            echo "::error::DEPLOYMENT_URL is not set. This might be due to:"
            echo "1. Failed Vercel deployment"
            echo "2. Missing or invalid VERCEL_CLI_TOKEN"
            echo "3. Network connectivity issues"
            echo "Please check the deployment logs above for more details."
            exit 1
          else
            echo "DEPLOYMENT_URL is set to: ${{ env.DEPLOYMENT_URL }}"
          fi
