name: CodeQuality

on:
  pull_request:
    types: [synchronize, opened, reopened]

jobs:
  # docker-lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - name: Lint Dockerfile.keystone
  #       run: docker run --rm -i hadolint/hadolint < Dockerfile.keystone
  #     - name: Lint Dockerfile.nextjs
  #       run: docker run --rm -i hadolint/hadolint < Dockerfile.nextjs

  # unit-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #     - name: Add .env file
  #       run: echo "${{ secrets.DEVELOPMENT_DATABASE_URL }}" > veterans/.env
  #     - name: Docker starts services
  #       run: docker compose up -d --build
  #     - name: Run tests
  #       run: docker compose run --rm app-nextjs npm run test -- --coverage
  #     - name: Save coverage report
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: coverage-report
  #         path: veterans/coverage/lcov.info

  e2e-test:
    runs-on: ubuntu-latest
    # container:
    #   image: mcr.microsoft.com/playwright:v1.49.1-noble
    #   options: --user 1001
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Add .env file
        run: echo "${{ secrets.DEVELOPMENT_DATABASE_URL }}" > veterans/.env

      # - name: Set NODE_ENV
      #   run: echo "NODE_ENV=development" >> veterans/.env

      - name: Docker starts services
        run: |
          docker compose up -d --build
          docker compose ps

      - name: Show Keystone logs
        run: docker compose logs app-keystone

      # - name: Check permissions
      #   run: ls -ld /usr/src/app
      #     /usr/src/app

      # - name: Test write permissions
      #   run: echo "test" > /usr/src/app/testfile && cat /usr/src/app/testfile

      - name: Check current working directory
        run: docker compose exec app-keystone pwd

      - name: Check current working directory content
        run: docker compose exec app-keystone ls

      - name: Check permissions
        run: ls -ld .

      - name: Test write permissions
        run: echo "test" > ./testfile && cat ./testfile

      - name: Check current working directory content
        run: docker compose exec app-keystone ls

      - name: Wait for Keystone service to be ready
        run: |
          for i in {1..20}; do
            if docker compose exec app-keystone curl -s http://app-keystone:3000/init | grep -q "Welcome to KeystoneJS"; then
              echo "Keystone is ready!";
              exit 0;
            fi;
            echo "Waiting for Keystone service...";
            sleep 5;
          done
          echo "Keystone service did not start in time";
          exit 1

      - name: Install Playwright Browsers
        run: docker compose exec app-keystone npx playwright install --with-deps

      - name: Run Playwright tests
        run: docker compose exec app-keystone npm run test:e2e

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: veterans/playwright-report/
          retention-days: 30

  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - name: Add .env file
  #       run: echo "${{ secrets.DEVELOPMENT_DATABASE_URL }}" > veterans/.env
  #     - name: Build app image
  #       run: docker compose build
  #     - name: Run linters
  #       run: docker compose run --rm app-nextjs npm run lint

  # sonarqube:
  #   runs-on: ubuntu-latest
  #   needs: unit-test
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - name: Download coverage report
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: coverage-report
  #     - name: SonarQube Scan
  #       uses: sonarsource/sonarqube-scan-action@v4.1.0
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
