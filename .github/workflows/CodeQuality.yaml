name: CodeQuality

on:
  pull_request:
    types: [synchronize, opened, reopened]

jobs:
  docker-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Lint Dockerfile.keystone
        run: docker run --rm -i hadolint/hadolint < Dockerfile.keystone
      - name: Lint Dockerfile.nextjs
        run: docker run --rm -i hadolint/hadolint < Dockerfile.nextjs

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Add .env file
        run: echo "${{ secrets.ENV_FILE }}" > veterans/.env
      - name: Build app image
        run: docker compose build
      - name: Run tests
        run: docker compose run --rm app-nextjs npm run test -- --coverage
      - name: Save coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: veterans/coverage/lcov.info

  e2e-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Add .env file
        run: echo "${{ secrets.ENV_FILE }}" > veterans/.env

      - name: Docker starts services
        run: docker compose up -d --build

      - name: Install Playwright Browsers
        run: docker compose exec app-keystone npx playwright install --with-deps

      - name: Run Playwright tests
        run: |
          docker compose exec app-keystone npm run test:e2e

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: veterans/playwright-report/
          retention-days: 30

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Add .env file
        run: echo "${{ secrets.ENV_FILE }}" > veterans/.env
      - name: Build app image
        run: docker compose build
      - name: Run linters
        run: docker compose run --rm app-nextjs npm run lint

  sonarqube:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v4.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
