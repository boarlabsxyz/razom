name: CodeQuality

on:
  pull_request:
    types: [synchronize, opened, reopened]

jobs:
  docker-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Run hadolint
        run: docker run --rm -i hadolint/hadolint < Dockerfile

  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Copy .env file
        run: cp .env.example .env
      - name: Build app image
        run: docker compose build
      - name: Run tests
        run: docker compose run --rm app npm run test

  e2e-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Copy .env file
        run: cp .env.example .env

      - name: Docker starts services
        run: docker compose up -d --build

      - name: Install Playwright Browsers
        run: docker compose exec app npx playwright install --with-deps

      - name: Run Playwright tests
        run: |
          docker compose exec app npm run test:e2e

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: veterans/playwright-report/
          retention-days: 30
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Copy .env file
        run: cp .env.example .env
      - name: Build app image
        run: docker compose build
      - name: Run linters
        run: docker compose run --rm app npm run lint

sonarqube:
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@v4.1.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
