name: Update Snapshots

on:
  workflow_dispatch:

jobs:
  update-snapshots:
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" > veterans/.env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> veterans/.env
          echo "SESSION_SECRET=${{ secrets.SESSION_SECRET }}" >> veterans/.env

      - name: Docker starts services
        run: docker compose up -d --build

      - name: Wait until app-keystone GraphQL API responds
        run: |
          for i in {1..30}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/api/graphql)
            if [ "$STATUS" -eq 400 ] || [ "$STATUS" -eq 200 ]; then
              echo "✅ app-keystone GraphQL API is ready"
              break
            fi
            echo "⏳ Waiting for app-keystone to respond on /api/graphql... ($i)"
            sleep 2
          done

          if [ "$STATUS" -ne 400 ] && [ "$STATUS" -ne 200 ]; then
            echo "❌ app-keystone GraphQL did not become ready in time"
            docker compose logs app-keystone
            exit 1
          fi

      - name: Wait for services to start
        run: sleep 10

      - name: Wait until app-nextjs is healthy
        run: |
          for i in {1..30}; do
            STATUS=$(docker inspect --format='{{json .State.Health.Status}}' $(docker ps -qf "name=app-nextjs"))
            if [ "$STATUS" = "\"healthy\"" ]; then
              echo "✅ app-nextjs is healthy"
              break
            fi
            echo "⏳ Waiting for app-nextjs to become healthy... ($i)"
            sleep 2
          done

          if [ "$STATUS" != "\"healthy\"" ]; then
            echo "❌ app-nextjs did not become healthy in time"
            docker compose logs app-nextjs
            exit 1
          fi

      - name: Install Playwright Browsers (app-nextjs)
        run: docker compose exec app-nextjs npx playwright install --with-deps

      - name: Run Playwright tests (app-nextjs)
        run: docker compose exec app-nextjs sh -c "npm run test:e2e -- e2e/nextjs-test --update-snapshots"
        continue-on-error: true

      - name: Ensure e2e directory exists
        run: mkdir -p e2e/nextjs-test/

      - name: Copy snapshots from container
        run: docker cp razom-app-nextjs-1:/usr/src/app/e2e/nextjs-test/screenshot-test.spec.ts-snapshots e2e/nextjs-test/

      - name: Upload snapshots as new artifact
        uses: actions/upload-artifact@v4
        with:
          name: playwright-snapshots
          path: e2e/nextjs-test/screenshot-test.spec.ts-snapshots
          overwrite: true
          retention-days: 20
