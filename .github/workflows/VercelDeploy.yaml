name: Vercel Preview Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  workflow_dispatch:

jobs:
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Add .env file
        run: echo "${{ secrets.ENV_FILE }}" > veterans/.env

      - name: Docker starts services
        run: docker compose up -d --build

      - name: Pull Vercel Environment
        working-directory: veterans
        run: |
          docker compose run --rm app-nextjs npx vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_CLI_TOKEN }}
          echo "Vercel Environment pulled successfully."

      - name: Check root folder
        run: |
          ls -al

      - name: Build project
        working-directory: veterans
        run: docker compose run --rm app-nextjs npx vercel build --yes --token=${{ secrets.VERCEL_CLI_TOKEN }}
        timeout-minutes: 10

      - name: Deploy to Vercel
        working-directory: veterans
        id: deploy
        run: |
          if ! DEPLOYMENT_URL=$(docker compose run --rm app-nextjs npx vercel deploy --prebuilt --token="${{ secrets.VERCEL_CLI_TOKEN }}"); then
            echo "::error::Deployment failed"
            exit 1
          fi
          echo "DEPLOYMENT_URL=${DEPLOYMENT_URL}" >> "$GITHUB_ENV"
        timeout-minutes: 10

      - name: Check if DEPLOYMENT_URL is set
        run: |
          if [ -z "${{ env.DEPLOYMENT_URL }}" ]; then
            echo "::error::DEPLOYMENT_URL is not set. This might be due to:"
            echo "1. Failed Vercel deployment"
            echo "2. Missing or invalid VERCEL_CLI_TOKEN"
            echo "3. Network connectivity issues"
            echo "Please check the deployment logs above for more details."
            exit 1
          else
            echo "DEPLOYMENT_URL is set to: ${{ env.DEPLOYMENT_URL }}"
          fi
